/**
 * 
 */
package com.lkb.proxy.util;

import java.net.InetAddress;
import java.util.Collection;
import java.util.Collections;
import java.util.HashSet;
import java.util.concurrent.Callable;
import java.util.concurrent.ConcurrentSkipListSet;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.atomic.AtomicInteger;

import org.apache.commons.lang3.math.NumberUtils;
import org.apache.http.HttpHost;
import org.jsoup.nodes.Document;
import org.jsoup.select.Elements;

import com.lkb.bean.SimpleObject;
import com.lkb.framework.ThreadPoolManager;
import com.lkb.robot.SpiderManager;
import com.lkb.robot.request.AbstractProcessorObserver;
import com.lkb.robot.util.ContextUtil;
import com.lkb.robot.util.CookieStoreUtil;
import com.lkb.thirdUtil.AbstractCrawler;
import com.lkb.util.StringUtil;
import com.lkb.util.WaringConstaint;

/**
 * @author think
 *
 */
public class ProxyAuthentication extends AbstractCrawler {
	private long responseTime;
	private boolean authenticate = false;
	
	private String localIp = "219.143.103.242";
	public ProxyAuthentication() {
		spider = SpiderManager.getInstance().createSpider("test", "aaa");
		spider.getSite().setCycleRetryTimes(1);
		spider.getSite().setRetryTimes(1);
		//spider.getSite().setTimeOut(10000);
		spider.setDestroyWhenExit(false);
		spider.setUseProxy(false);
		//localIp = "183.4.105.50";
	}
	public void close() {
		spider.close();
	}
	public boolean requestResponseTime(String ip, String port) {
		boolean auth = false;
		HttpHost proxy = null;
		responseTime = 0;
		try {
			proxy = new HttpHost(InetAddress.getByName(ip), NumberUtils.toInt(port));
			//dx.setTest(true);
			boolean auth1 = false;
			auth1 = requestBd1(proxy);
			if (auth1) {
				auth = true;
			}
			//responseTime /= 3;
		} catch (Exception e) {
			e.printStackTrace();
		}
		authenticate = auth;
		return auth;
	}
	public boolean authenticate(String ip, String port) {
		clearContext();
		boolean auth = false;
		HttpHost proxy = null;
		responseTime = 0;
		try {
			proxy = new HttpHost(InetAddress.getByName(ip), NumberUtils.toInt(port));
			//dx.setTest(true);
			boolean auth1 = false;
			auth1 = requestDx(proxy);
			if (auth1 && requestIp(proxy)) {
				auth = true;
			}
			responseTime /= 3;
		} catch (Exception e) {
			e.printStackTrace();
		}
		authenticate = auth;
		return auth;
	}
	public boolean authenticateHttps(String ip, String port) {
		clearContext();
		boolean auth = false;
		HttpHost proxy = null;
		responseTime = 0;
		try {
			proxy = new HttpHost(InetAddress.getByName(ip), NumberUtils.toInt(port));
			//dx.setTest(true);
			boolean auth1 = false;
			auth1 = requestHttps(proxy);
			if (auth1 && requestIp(proxy)) {
				auth = true;
			}
			responseTime /= 3;
		} catch (Exception e) {
			e.printStackTrace();
		}
		authenticate = auth;
		return auth;
	}
	public boolean authenticateAll(String ip, String port) {
		clearContext();
		boolean auth = false;
		HttpHost proxy = null;
		responseTime = 0;
		try {
			proxy = new HttpHost(InetAddress.getByName(ip), NumberUtils.toInt(port));
			//dx.setTest(true);
			boolean auth1 = requestIp(proxy);
			if (auth1 && requestHttps(proxy) && requestHttp(proxy)) {
				auth = true;
			}
			responseTime /= 3;
		} catch (Exception e) {
			e.printStackTrace();
		}
		authenticate = auth;
		return auth;
	}
	public boolean authenticateHttp(String ip, String port) {
		clearContext();
		boolean auth = false;
		HttpHost proxy = null;
		responseTime = 0;
		try {
			proxy = new HttpHost(InetAddress.getByName(ip), NumberUtils.toInt(port));
			//dx.setTest(true);
			boolean auth1 = false;
			auth1 = requestHttp(proxy);
			if (auth1 && requestIp(proxy)) {
				auth = true;
			}
			responseTime /= 3;
		} catch (Exception e) {
			e.printStackTrace();
		}
		authenticate = auth;
		return auth;
	}
	
	private void clearContext() {
		CookieStoreUtil.removeContextCookieStore(1);
		CookieStoreUtil.removeContextCookieStore(2);
	}
	private boolean requestBd1(HttpHost proxy) {
		if (proxy == null) {
			return true;
		}
		boolean auth = false;
		authenticateBd1Proxy(proxy);
		spider.start();
		String k1 = getData().getString("key");
		if (k1 != null) {
			auth = true;
		}
		return auth;
	}
	private void authenticateBd1Proxy(HttpHost proxy) {		
		getUrl("http://www.baidu.com/", null, new Object[]{null, null, proxy}, new AbstractProcessorObserver(util, WaringConstaint.TEST_1){
			@Override
			public void afterRequest(SimpleObject context) {
				data.put("key", ContextUtil.getCookieValue(context, "H_PS_PSSID"));
				responseTime += ContextUtil.getResponseTime(context);
			}
		});
	}
	private boolean requestIp(HttpHost proxy) {
		if (proxy == null) {
			return true;
		}
		boolean auth = false;
		authenticateIpProxy(proxy);
		spider.start();
		String k1 = getData().getString("ip");
		
		if (k1 != null && ((localIp != null && k1.indexOf(localIp) < 0) || (proxy.getHostName().equals(k1)))) {
			auth = true;
		}
		return auth;
	}
	private void authenticateIpProxy(HttpHost proxy) {		
		getUrl("http://www.ip.cn/", null, new Object[]{null, null, proxy}, new AbstractProcessorObserver(util, WaringConstaint.TEST_1){
			@Override
			public void afterRequest(SimpleObject context) {
				parseIP(context, 2);
				
			}
		});
	}
	private void parseIP(SimpleObject context, int i) {
		Document doc = ContextUtil.getDocumentOfContent(context); 
		if (doc == null) {
			return;
		}
		Elements es1 = doc.select("div#result");
		String k1 = es1.select("code").text();
		data.put("ip", k1);
		data.put("address", StringUtil.subStr("来自：", "GeoIP:", es1.text()));
		long responseTime2 = ContextUtil.getResponseTime(context);
		responseTime += responseTime2;
		//System.out.println("ip.cn :" + k1 + " response time:" + responseTime2);
	}
	
	private boolean requestDx(HttpHost proxy) {
		if (proxy == null) {
			return true;
		}
		boolean auth = false;
		authenticateDxProxy(proxy);
		spider.start();
		String k1 = getData().getString("key");
		if (k1 != null) {
			authenticateDxProxy(proxy);
			data.clear();
			spider.start();
			String k2 = getData().getString("key");
			if (k2 != null) {
				auth = k1.equals(k2);
			}
		}
		return auth;
	}
	
	private void authenticateDxProxy(HttpHost proxy) {		
		getUrl("http://www.189.cn/dqmh/login/loginJT.jsp", "http://www.189.cn/dqmh/login/loginJT.jsp", new Object[]{null, null, proxy}, new AbstractProcessorObserver(util, WaringConstaint.HNDX_1) {
			@Override
			public void afterRequest(SimpleObject context) {
				data.put("key", ContextUtil.getCookieValue(context, "JSESSIONID"));
				responseTime += ContextUtil.getResponseTime(context);
				//DebugUtil.printCookieData(ContextUtil.getCookieStore(context), null);
			}
		});
		
	}
	private boolean requestHttps(HttpHost proxy) {
		/*if (proxy == null) {
			return true;
		}*/
		boolean auth = false;
		authenticateHttpsProxy(proxy);
		spider.start();
		String k1 = getData().getString("key");
		if (k1 != null) {
			authenticateHttpsProxy(proxy);
			data.clear();
			spider.start();
			String k2 = getData().getString("key");
			if (k2 != null) {
				auth = k1.equals(k2);
			}
		}
		return auth;
	}
	
	private void authenticateHttpsProxy(HttpHost proxy) {		
		//https://i.mi.com/
		//https://8.163.com/
		getUrl("https://8.163.com/", "https://8.163.com/", new Object[]{null, null, proxy}, new AbstractProcessorObserver(util, WaringConstaint.HNDX_1) {
			@Override
			public void afterRequest(SimpleObject context) {
				data.put("key", ContextUtil.getCookieValue(context, "JSESSIONID"));
				responseTime += ContextUtil.getResponseTime(context);
				//DebugUtil.printCookieData(ContextUtil.getCookieStore(context), null);
			}
		});
		
	}
	private boolean requestHttp(HttpHost proxy) {
		/*if (proxy == null) {
			return true;
		}*/
		boolean auth = false;
		authenticateHttpProxy(proxy);
		spider.start();
		String k1 = getData().getString("key");
		if (k1 != null) {
			authenticateHttpProxy(proxy);
			data.clear();
			spider.start();
			String k2 = getData().getString("key");
			if (k2 != null) {
				auth = k1.equals(k2);
			}
		}
		return auth;
	}
	
	private void authenticateHttpProxy(HttpHost proxy) {		
		//https://i.mi.com/
		//https://8.163.com/
		getUrl("http://www.baidu.com/", null, new Object[]{null, null, proxy}, new AbstractProcessorObserver(util, WaringConstaint.HNDX_1) {
			@Override
			public void afterRequest(SimpleObject context) {
				data.put("key", ContextUtil.getCookieValue(context, "BAIDUID"));
				responseTime += ContextUtil.getResponseTime(context);
				//DebugUtil.printCookieData(ContextUtil.getCookieStore(context), null);
			}
		});
		
	}
	private boolean requestBd(HttpHost proxy) {
		if (proxy == null) {
			return true;
		}
		boolean auth = false;
		authenticateBdProxy(proxy);
		spider.start();
		String k1 = getData().getString("key");
		if (k1 != null) {
			authenticateBdProxy(proxy);
			data.clear();
			spider.start();
			String k2 = getData().getString("key");
			if (k2 != null) {
				auth = k1.equals(k2);
			}
		}
		return auth;
	}
	
	private void authenticateBdProxy(HttpHost proxy) {		
		getUrl("http://189.cn/dqmh/productOnLine.do?method=login", null, new Object[]{null, null, proxy}, new AbstractProcessorObserver(util, WaringConstaint.HNDX_1) {
			@Override
			public void afterRequest(SimpleObject context) {
				data.put("key", ContextUtil.getCookieValue(context, "JSESSIONID"));
				responseTime += ContextUtil.getResponseTime(context);
				//DebugUtil.printCookieData(ContextUtil.getCookieStore(context), null);
			}
		});
		
	}
	
	/**
	 * @param args
	 */
	private static Collection<String> httpSet = new HashSet<String>();
	private static Collection<String> httpsSet = new HashSet<String>();
	private static Collection<String> https2Set = new HashSet<String>();
	private static final AtomicInteger threadNum = new AtomicInteger(0);
	private static Collection<String> queue = new ConcurrentSkipListSet<String>();
	private static Collection<Future<Boolean>> futureList = Collections.synchronizedSet(new HashSet());
	public static void main(String[] args) {
		long st = System.currentTimeMillis();
		//ok
		/*
		exec("61.50.245.163", "8000");
		exec("58.30.231.153", "80");
		exec("122.96.59.103", "843");
		exec("122.96.59.103", "843");
		exec("139.217.5.155", "31288");
		exec("118.186.242.222", "843");
		*/
		
		//exec("112.124.105.36", "3128");
		/*exec("186.93.176.139", "9064");
		exec("201.249.19.254", "9064");*/
		//exec("139.217.5.155", "31288");
		//exec("111.13.109.26", "83");
		//exec("211.167.105.69", "82");
		//exec("117.21.192.10:80, 182.118.23.7:8081, 111.11.152.135:80, 120.203.214.147:82, 59.62.8.70:63000, 120.203.214.147:84, 120.203.214.147:83, 119.254.66.7:5070, 182.92.105.140:8888, 117.121.21.222:80, 182.118.125.84:9999, 120.203.214.182:82, 116.236.250.175:1920, 120.203.214.182:80, 120.203.214.182:81, 120.203.214.182:86, 182.92.67.54:80, 120.203.214.182:85, 218.4.236.117:80, 61.50.245.163:8000, 120.203.214.147:80, 60.55.43.74:80, 114.247.121.1:80, 61.155.169.11:808, 112.5.240.82:80, 210.73.96.100:80, 120.202.249.230:80, 120.192.200.73:80, 218.94.82.117:8088, 218.84.189.41:1510, 112.96.28.49:80, 121.40.162.173:8088, 183.60.98.67:80, 120.202.249.232:80, 115.29.247.115:8888, 113.57.230.49:81, 111.1.44.24:80, 111.13.87.173:8081, 203.100.80.81:8080, 115.236.59.194:3128, 120.202.249.233:80, 183.207.229.137:818, 183.60.98.65:80, 119.4.95.136:80, 120.203.214.187:9090, 61.50.245.163:8888, 117.25.129.238:8888, 117.156.8.68:80, 180.153.32.11:8080, 117.21.192.8:80, 221.176.14.72:80, 123.162.191.84:9999, 120.203.214.144:80, 120.203.214.144:83, 218.204.131.250:3128, 120.203.214.144:82");
		//exec("125.39.66.68", "80");
		//exec("218.203.13.178", "80");
		//exec("59.57.63.27:8081, 120.202.249.233:80, 182.92.67.54:80, 183.61.143.133:80, 120.202.249.230:80, 218.4.236.117:80, 119.254.66.7:5070, 218.207.208.55:8080, 120.202.249.232:80, 117.121.21.222:80");
		//exec("60.18.206.3:8090,122.96.59.105:83,117.21.192.10:80,218.204.131.250:3128,120.203.214.144:84,183.60.98.67:80,111.11.152.142:80,218.207.172.237:80,124.207.175.91:8080,210.14.152.92:80,121.14.9.76:110");
		//exec("211.167.105.67:82,121.40.162.173:8088,211.143.134.82:8080,114.255.183.174:8080,120.202.249.230:80,111.13.87.173:8081,58.51.197.19:63000,218.203.13.169:81,114.246.38.90:8585,211.157.104.100:80,111.11.228.9:81,116.231.18.106:1920,221.176.14.72:80,118.122.114.238:9000,120.193.146.110:80,175.1.75.40:80,218.207.102.106:81,118.192.71.99:8088,60.11.23.17:8585,60.215.144.50:63000,115.29.28.137:8090,183.223.174.234:8123,111.11.228.9:843,122.96.59.107:83,113.214.13.1:8000");
		//exec("202.108.50.75:80,211.167.105.70:82,218.94.82.117:8088,121.40.102.152:80,42.94.110.217:8585,115.236.59.194:3128,117.156.8.72:80,59.57.63.27:8081,121.14.138.50:17210,210.73.96.100:80,120.203.214.182:81,211.167.105.72:83,182.118.23.7:8081,111.11.228.9:82,61.50.138.226:8080,122.224.90.20:80,120.193.146.92:80,218.4.236.117:80,183.60.98.65:80,120.202.249.232:8080,42.62.61.245:80,218.108.168.68:82,120.203.214.147:82,113.57.230.49:81,111.11.166.133:63000");
		//exec("121.14.138.56:81,221.10.102.199:83,119.254.66.7:5070,211.103.250.146:80,111.40.194.104:82,218.203.13.189:80,120.203.214.187:80,117.21.192.8:80,218.203.13.170:81,111.11.228.81:80,119.4.95.136:80,60.55.43.74:80,218.203.13.180:8080,218.203.13.180:8080,218.203.13.186:80,111.11.228.9:83,61.50.245.163:8000,111.40.194.42:82,120.203.214.182:84,218.108.168.70:82,121.14.4.107:80,183.60.98.65:80,218.203.13.178:80,111.13.109.51:80,111.40.194.105:83");
		//exec("218.207.102.106:82,222.27.108.250:8080,27.207.238.211:8585,202.196.222.205:8080,120.203.214.182:80,116.236.250.175:1920,117.121.55.227:80,202.108.50.74:80,58.221.184.114:1337,218.203.13.182:80,115.29.247.115:8888,60.194.100.51:80,203.100.80.81:8080,111.11.228.9:843,182.92.67.54:80,117.165.47.253:8123,219.130.222.29:2452,183.136.221.6:3128,123.131.182.138:8585,218.203.13.189:8080,120.203.214.182:82,111.40.194.104:84,218.203.13.170:80,111.11.228.9:80,125.71.212.25:9000");
		//exec("218.207.102.106:843,114.251.126.166:80,116.228.80.186:8080,120.203.214.147:81,183.207.229.196:8088,60.2.45.34:29733,221.176.14.72:80,117.156.8.68:80,121.196.141.249:80,111.40.194.105:84,183.141.73.251:80,120.202.249.230:80,218.108.168.70:80,59.62.8.70:63000,180.153.32.11:8080,111.11.228.9:82,120.203.214.147:81,183.224.1.56:80,183.207.229.147:80,218.203.13.169:84,120.193.146.96:80,211.167.105.104:82,125.46.55.245:8080,183.61.240.126:1080,218.203.13.188:80");
		//exec("183.224.1.56:8080,121.14.4.108:80,182.118.23.7:8081,183.245.212.28:8123,58.30.231.153:80,122.96.59.107:80,218.84.213.182:63000,120.203.214.182:86,218.207.102.106:80,119.97.164.48:8085,111.13.109.26:82,180.169.23.140:80,117.139.45.86:8123,117.25.129.238:8888,211.167.105.69:80,122.96.59.107:82,183.140.162.200:80,202.108.50.75:80,218.108.168.69:80,124.200.1.151:80,111.13.109.54:80,183.141.72.115:80,119.147.115.30:8088,218.203.13.176:80,120.203.214.182:80");
		
		exec("1.197.17.140:9999,14.18.16.67:80,14.18.16.71:80,27.50.128.242:88,42.62.61.245:80,42.96.139.43:8888,42.96.193.60:3128,42.121.28.111:3128,42.121.105.155:8888,58.30.231.153:80,58.42.236.241:80,58.56.124.192:80,58.215.142.208:80,58.240.65.57:3128,58.251.78.71:8088,58.253.238.242:80,58.253.238.243:80,59.46.72.245:8080,59.125.43.139:8080,59.125.120.11:3129,59.126.0.60:8088,59.127.85.114:8088,60.12.119.120:80,60.18.147.109:8085,60.21.132.218:63000,60.55.43.74:80,60.190.138.148:80,60.190.138.151:80,60.191.203.76:3128,60.194.100.51:80");
		exec("60.206.88.190:8118,60.206.153.177:8118,60.213.189.170:3988,60.221.252.107:80,60.221.253.204:80,60.250.144.184:3128,61.50.245.163:8000,61.50.245.163:8888,61.54.221.200:3128,61.57.81.202:8088,61.57.86.138:8088,61.57.208.8:8088,61.144.14.72:8080,61.149.182.102:8080,61.155.169.11:808,61.156.35.2:3128,61.157.126.37:18000,61.234.123.64:8080,101.4.60.46:80,101.4.60.47:80,101.4.60.51:80,101.69.167.85:80,101.69.177.75:3128,101.69.197.23:80,101.251.238.123:8080,103.244.80.40:80,103.244.80.40:3128,103.244.80.40:8080,106.3.40.249:8081,106.37.177.251:3128");
		exec("111.1.3.38:8000,111.1.32.20:8088,111.1.32.21:86,111.1.32.22:86,111.1.32.23:85,111.1.32.24:81,111.1.32.24:8080,111.1.32.24:8088,111.1.32.24:8123,111.1.32.28:81,111.1.32.29:86,111.1.32.122:81,111.1.36.2:80,111.1.36.3:80,111.1.36.4:80,111.1.36.5:80,111.1.36.6:80,111.1.36.9:80,111.1.36.21:80,111.1.36.21:81,111.1.36.21:83,111.1.36.22:80,111.1.36.23:80,111.1.36.23:81,111.1.36.23:83,111.1.36.23:85,111.1.36.25:80,111.1.36.25:83,111.1.36.25:85,111.1.36.25:86");
		exec("111.1.36.26:80,111.1.36.26:81,111.1.36.26:82,111.1.36.26:83,111.1.36.26:84,111.1.36.26:85,111.1.36.137:80,111.1.36.138:80,111.1.36.139:80,111.1.36.140:80,111.1.36.163:80,111.1.36.163:81,111.1.36.164:80,111.1.36.164:85,111.1.36.164:86,111.1.36.165:80,111.1.36.165:83,111.7.129.140:80,111.7.129.141:80,111.7.129.150:80,111.7.129.151:80,111.7.129.160:80,111.7.129.162:80,111.8.9.165:84,111.11.184.5:80,111.11.184.5:82,111.11.184.5:83,111.11.184.9:80,111.11.184.10:80,111.11.184.12:80");
		exec("111.11.184.118:80,111.13.2.130:80,111.13.2.136:80,111.13.2.137:80,111.13.2.138:80,111.13.2.139:80,111.13.2.140:80,111.13.2.141:80,111.13.2.142:80,111.13.2.143:80,111.13.109.51:80,111.13.109.52:80,111.13.109.53:80,111.13.109.54:80,111.161.126.83:8080,111.161.126.84:80,111.161.126.85:80,111.161.126.87:8080,111.161.126.88:8080,111.161.126.89:8080,111.161.126.90:8080,111.161.126.92:8080,111.161.126.93:8080,111.205.122.222:80,111.206.27.194:80,111.206.81.248:80,112.5.254.172:80,112.65.44.67:3128,112.112.11.82:8080,112.124.3.76:80");
		exec("112.124.5.121:80,112.124.6.101:80,112.124.65.28:8080,113.57.230.49:81,113.57.230.83:80,113.57.252.103:80,113.57.252.104:80,113.57.252.107:80,113.105.224.77:80,113.105.224.78:80,113.105.224.79:80,113.105.224.85:80,113.107.57.76:80,113.140.25.4:81,113.214.13.1:8000,114.80.207.218:80,114.112.91.135:3128,114.112.192.195:3128,114.215.131.118:80,114.255.183.164:8080,114.255.183.174:8080,115.28.2.224:80,115.28.23.36:3128,115.28.50.204:80,115.28.85.240:8088,115.28.236.172:3128,115.29.163.202:80,115.29.164.39:80,115.29.166.5:3128,115.29.166.133:82");
		exec("115.29.184.17:82,115.29.191.128:80,115.29.192.181:80,115.29.229.169:8580,115.29.246.204:80,115.29.247.115:8888,115.29.249.17:80,115.236.59.194:3128,115.238.235.88:80,116.228.55.217:8003,116.228.80.186:8080,116.236.216.116:8080,117.21.192.7:80,117.21.192.8:80,117.21.192.9:80,117.21.192.10:80,117.21.192.11:80,117.25.129.238:8888,117.27.245.98:80,117.79.64.84:80,117.121.21.222:80,117.121.55.227:80,117.139.18.155:80,117.139.38.5:8123,117.146.116.67:80,117.146.116.69:80,118.26.230.75:80,118.193.129.4:80,118.233.160.111:8088,119.4.95.136:80");
		exec("119.4.115.51:8090,119.6.78.39:80,119.97.146.148:80,119.97.164.48:8085,119.145.200.50:8585,120.24.101.7:80,120.85.132.234:80,120.86.191.226:80,120.192.92.98:80,120.192.92.99:80,120.192.200.72:80,120.192.200.73:80,120.192.249.47:80,120.198.243.151:80,120.202.249.230:80,120.202.249.232:80,120.202.249.232:8080,120.202.249.233:80,120.202.249.233:8080,120.203.214.144:80,120.203.214.144:81,120.203.214.144:82,120.203.214.144:83,120.203.214.144:84,120.203.214.147:80,120.203.214.147:81,120.203.214.147:82,120.203.214.147:83,120.203.214.147:84,120.203.214.151:80");
		exec("120.203.214.172:80,120.203.214.172:9090,120.203.214.182:82,120.203.214.182:84,120.203.214.182:85,120.203.214.182:86,120.203.214.183:80,120.203.214.187:80,120.203.214.187:9090,120.203.215.11:80,120.203.215.11:81,120.203.215.19:80,120.210.202.4:80,121.40.72.148:80,121.40.102.152:80,121.101.214.160:80,121.199.30.110:82,121.199.60.143:3128,121.207.252.105:3128,122.72.120.38:80,122.112.4.132:80,122.112.4.132:8080,122.143.3.75:80,122.143.3.75:83,122.225.19.181:3128,122.227.8.190:80,123.110.69.196:8088,123.205.52.172:8088,124.12.87.119:8088,124.16.144.119:81");
		exec("124.207.175.91:8080,125.39.66.66:80,125.39.66.68:80,125.39.66.75:80,125.39.66.149:80,125.39.66.150:80,125.83.124.158:8088,125.88.75.151:3128,140.206.86.68:8080,163.23.70.129:3128,180.92.11.179:8088,180.153.32.9:8080,180.153.32.11:8080,182.118.23.7:8081,182.239.127.137:80,183.60.98.65:80,183.60.98.66:80,183.60.98.67:80,183.62.60.100:80,183.62.172.50:9999,183.63.149.110:3128,183.129.161.28:3128,183.136.221.6:3128,183.203.22.69:80,183.203.22.76:80,183.203.22.78:80,183.207.224.12:80,183.207.224.13:80,183.207.224.14:80,183.207.224.15:80");
		exec("183.207.224.42:80,183.207.224.43:80,183.207.224.44:80,183.207.224.45:80,183.207.224.48:80,183.207.224.49:80,183.207.224.49:81,183.207.224.50:81,183.207.224.50:85,183.207.224.51:80,183.207.224.51:82,183.207.224.51:83,183.207.224.51:84,183.207.224.52:80,183.207.224.52:81,183.207.228.7:80,183.207.228.7:81,183.207.228.7:83,183.207.228.7:90,183.207.228.9:80,183.207.228.9:86,183.207.228.9:88,183.207.228.54:80,183.207.228.55:80,183.207.228.56:80,183.207.228.57:80,183.207.228.58:80,183.207.228.59:80,183.207.228.60:80,183.207.228.114:80");
		exec("183.207.228.115:80,183.207.228.116:80,183.207.228.117:80,183.207.228.118:80,183.207.228.119:80,183.207.228.119:81,183.207.228.119:83,183.207.228.119:84,183.207.228.119:86,183.207.228.120:80,183.207.228.121:80,183.207.228.122:80,183.207.228.123:80,183.207.228.124:80,183.207.229.10:80,183.207.229.11:80,183.207.229.137:80,183.207.229.137:6969,183.207.229.137:8001,183.207.229.137:8088,183.207.229.138:80,183.207.229.138:8000,183.207.229.138:8090,183.207.229.139:80,183.207.229.140:80,183.207.229.140:8090,183.207.229.194:80,183.207.229.196:80,183.207.229.199:80,183.207.229.202:80");
		exec("183.207.229.203:80,183.207.232.119:8080,183.207.232.193:8080,183.207.232.194:8080,183.207.237.11:80,183.207.237.18:80,183.207.237.18:81,183.224.1.30:80,183.224.12.74:80,183.224.12.76:80,183.224.12.77:80,183.224.12.88:80,183.230.53.151:8123,183.232.108.38:80,183.238.133.43:80,202.43.150.210:80,202.101.96.154:8888,202.103.150.70:8088,202.105.247.122:9999,202.106.16.36:3128,202.106.169.228:8080,202.107.85.47:3128,202.108.50.74:80,202.108.50.75:80,202.171.253.72:80,202.171.253.74:80,202.171.253.74:83,202.171.253.84:80,202.171.253.84:85,202.171.253.84:86");
		exec("202.171.253.98:80,202.171.253.101:80,202.171.253.111:80,202.171.253.130:80,202.171.253.131:80,202.171.253.132:80,202.171.253.134:80,202.171.253.135:80,202.195.237.242:80,203.74.10.1:3128,203.100.80.81:8080,203.192.12.148:80,203.195.151.20:3128,210.13.81.245:80,210.14.152.91:80,210.14.152.91:88,210.14.152.91:8080,210.14.152.92:80,210.14.152.92:88,210.14.152.92:8080,210.75.14.157:80,210.75.14.158:80,210.82.92.77:3128,211.71.30.97:3128,211.138.60.6:80,211.138.60.7:80,211.138.60.9:80,211.138.60.12:80,211.138.60.18:80,211.138.121.35:80");
		exec("211.138.121.36:80,211.138.121.36:81,211.138.121.36:82,211.138.121.36:83,211.138.121.37:80,211.138.121.37:81,211.138.121.37:82,211.138.121.37:83,211.138.121.37:84,211.138.121.37:86,211.138.121.38:80,211.138.121.38:81,211.138.121.38:82,211.138.121.38:83,211.138.121.38:85,211.143.146.239:80,211.144.81.66:18000,211.144.81.68:18000,211.144.81.69:18000,211.152.50.70:80,211.159.68.248:8088,211.166.8.27:80,211.167.105.72:80,211.167.105.72:82,211.167.105.99:80,218.4.236.117:80,218.5.74.174:80,218.14.121.233:9000,218.24.166.78:3128,218.65.132.38:80");
		exec("218.75.155.242:8888,218.76.158.156:63000,218.84.191.178:63000,218.90.174.167:3128,218.94.82.117:8088,218.95.158.99:63000,218.104.239.12:8118,218.108.168.69:80,218.108.168.69:82,218.108.168.70:80,218.108.168.70:82,218.108.232.99:80,218.108.242.124:80,218.201.21.142:80,218.201.21.144:80,218.201.21.145:80,218.201.21.147:80,218.201.21.153:80,218.201.21.155:80,218.201.38.49:80,218.204.131.250:3128,218.207.208.55:8080,218.240.131.12:80,218.240.156.82:80,218.241.167.187:80,219.136.252.120:80,219.139.240.176:80,219.145.111.164:8088,220.178.101.170:80,220.180.137.158:63000");
		exec("220.181.45.4:8888,221.5.69.51:80,221.7.195.107:63000,221.10.102.199:80,221.10.102.199:83,221.10.102.199:843,221.176.14.72:80,221.180.130.50:80,222.74.28.14:23,222.85.149.4:3128,222.87.129.30:80,222.92.141.250:80,222.126.233.35:9999,222.171.28.117:3128,222.240.175.79:8580,222.246.232.55:80,223.4.21.184:80,223.68.6.10:8000,");
		
		exec("14.18.16.71:80,27.50.128.242:88,27.100.80.1:9064,36.250.74.87:80,36.250.74.88:80,42.62.61.245:80,42.96.139.43:8888,42.121.105.155:8888,58.30.231.153:80,58.42.236.241:80,58.56.124.192:80,58.67.159.50:80,58.68.129.68:8888,58.215.142.208:80,58.251.78.71:8088,58.251.132.181:8888,58.253.238.242:80,58.253.238.243:80,59.46.72.245:8080,59.125.43.139:8080,59.151.103.14:80,59.151.103.15:80,60.12.119.120:80,60.18.147.109:8085,60.55.43.74:80,60.190.138.148:80,60.190.138.151:80,60.191.203.76:3128,60.194.100.51:80,60.206.153.177:8118");
		exec("60.207.166.152:80,60.213.189.170:3988,60.221.252.107:80,60.221.253.204:80,60.250.144.184:3128,61.50.245.163:8000,61.50.245.163:8888,61.54.221.200:3128,61.149.182.102:8080,61.155.169.11:808,61.156.35.2:3128,61.163.231.198:3128,61.234.123.64:8080,101.69.167.85:80,101.69.177.75:3128,101.69.197.23:80,101.228.137.17:80,101.251.238.123:8080,103.244.80.40:80,103.244.80.40:3128,103.244.80.40:8080,106.3.40.249:8081,106.37.177.251:3128,111.1.3.38:8000,111.1.32.20:8088,111.1.32.21:86,111.1.32.23:85,111.1.32.24:8080,111.1.32.24:8088,111.1.32.24:9000");
		exec("111.1.32.24:9999,111.1.36.3:80,111.1.36.21:80,111.1.36.25:80,111.1.36.25:83,111.1.36.138:80,111.1.36.139:80,111.1.36.163:80,111.1.36.165:80,111.13.2.130:80,111.13.2.136:80,111.13.2.137:80,111.13.2.138:80,111.13.2.139:80,111.13.2.140:80,111.13.2.141:80,111.13.2.142:80,111.13.2.143:80,111.13.109.51:80,111.13.109.52:80,111.13.109.53:80,111.13.109.54:80,111.161.126.83:8080,111.161.126.87:8080,111.161.126.89:8080,111.161.126.90:8080,111.161.126.93:8080,111.205.122.222:80,111.206.27.194:80,112.5.254.172:80");
		exec("112.17.0.201:80,112.17.0.205:80,112.25.146.154:8088,112.65.44.67:3128,113.57.230.49:81,113.57.230.83:80,113.57.252.103:80,113.57.252.104:80,113.57.252.107:80,113.105.93.79:80,113.105.93.80:80,113.105.224.77:80,113.105.224.78:80,113.105.224.79:80,113.105.224.85:80,113.107.57.76:80,113.140.25.4:81,113.214.13.1:8000,114.80.207.218:80,114.112.91.135:3128,114.112.192.195:3128,114.255.183.164:8080,115.28.2.224:80,115.28.11.165:8888,115.28.240.199:3128,115.29.11.46:3128,115.29.164.39:80,115.29.166.133:82,115.29.184.17:82,115.29.246.204:80");
		exec("115.29.247.115:8888,115.236.59.194:3128,115.238.235.88:80,115.238.250.23:1111,115.238.250.23:2222,115.238.250.23:6666,116.113.125.158:8080,116.228.55.217:8003,116.236.216.116:8080,117.21.192.7:80,117.21.192.8:80,117.21.192.9:80,117.21.192.10:80,117.121.21.222:80,117.139.44.139:8123,117.146.116.67:80,118.186.239.243:80,118.193.129.4:80,119.4.95.135:80,119.4.95.136:80,119.4.115.51:8090,119.77.232.222:8088,119.80.160.50:80,119.97.164.48:8085,119.164.126.111:8088,120.24.61.127:808,120.192.249.47:80,120.198.244.27:80,120.202.249.230:80,120.202.249.233:80");
		exec("120.203.214.144:80,120.203.214.147:80,120.203.214.147:81,120.203.214.147:82,120.203.214.147:83,120.203.214.147:84,120.203.214.172:80,120.203.214.172:9090,120.203.214.183:80,120.203.214.187:80,120.203.215.11:80,120.203.215.11:81,120.210.202.4:80,121.14.138.50:17210,121.40.72.148:80,121.40.102.152:80,121.40.176.213:808,121.42.8.140:9000,121.52.229.51:3128,121.52.250.71:3128,121.101.214.160:80,121.199.30.110:82,121.199.60.143:3128,122.72.120.38:80,122.96.59.105:80,122.96.59.105:81,122.96.59.105:82,122.96.59.105:83,122.96.59.105:843,122.143.3.75:80");
		exec("122.143.3.75:83,122.146.42.176:3128,122.200.90.172:3128,122.226.102.120:80,122.227.8.190:80,123.162.191.84:9999,123.166.100.134:8118,123.177.20.220:80,124.68.10.45:80,124.218.9.222:8088,124.240.187.76:80,124.240.187.76:82,124.240.187.79:80,124.240.187.79:81,124.240.187.79:83,125.39.66.67:80,125.39.66.68:80,125.39.66.75:80,125.39.66.76:80,125.39.66.76:8080,140.121.197.169:8080,140.206.86.70:8080,171.14.186.246:9999,180.153.32.9:8080,180.153.32.11:8080,180.166.67.100:8080,182.48.116.51:8080,182.118.23.7:8081,182.118.31.110:80,182.118.125.84:9999");
		exec("183.60.44.136:88,183.60.98.65:80,183.60.98.66:80,183.60.98.67:80,183.63.149.103:80,183.63.149.110:3128,183.129.161.28:3128,183.203.12.167:80,183.203.22.72:80,183.207.224.12:80,183.207.224.13:80,183.207.224.14:80,183.207.224.15:80,183.207.224.42:80,183.207.224.43:80,183.207.224.45:80,183.207.224.51:80,183.207.224.51:82,183.207.224.51:83,183.207.224.51:84,183.207.228.7:80,183.207.228.7:81,183.207.228.7:83,183.207.228.7:90,183.207.228.8:80,183.207.228.9:80,183.207.228.9:86,183.207.228.9:88,183.207.228.54:80,183.207.228.55:80");
		exec("183.207.228.56:80,183.207.228.57:80,183.207.228.58:80,183.207.228.59:80,183.207.228.60:80,183.207.228.114:80,183.207.228.115:80,183.207.228.116:80,183.207.228.117:80,183.207.228.118:80,183.207.228.119:80,183.207.228.119:81,183.207.228.119:84,183.207.228.120:80,183.207.228.121:80,183.207.228.122:80,183.207.228.123:80,183.207.228.124:80,183.207.229.10:80,183.207.229.10:81,183.207.229.11:80,183.207.229.12:80,183.207.229.13:9000,183.207.229.137:80,183.207.229.137:8888,183.207.229.138:80,183.207.229.138:8000,183.207.229.139:80,183.207.229.140:8090,183.207.229.194:80");
		exec("183.207.229.195:80,183.207.229.196:80,183.207.229.199:80,183.207.229.202:80,183.207.237.11:80,183.207.237.18:80,183.207.237.18:81,183.224.1.30:80,183.224.12.74:80,183.224.12.81:80,183.224.12.82:80,183.232.108.38:80,202.103.150.70:8088,202.105.247.122:9999,202.106.16.36:3128,202.106.169.228:8080,202.108.50.74:80,202.108.50.75:80,202.112.114.27:3128,202.120.188.104:80,202.171.253.84:80,202.171.253.84:86,202.171.253.98:80,202.171.253.101:80,202.171.253.111:80,202.171.253.134:80,203.74.10.1:3128,203.80.144.4:80,203.195.151.20:3128,203.195.195.215:8888");
		exec("210.14.152.91:80,210.14.152.91:88,210.14.152.91:8080,210.14.152.92:80,210.14.152.92:88,210.14.152.92:8080,210.82.92.77:3128,211.69.48.14:3128,211.71.30.97:3128,211.138.121.35:80,211.138.121.36:80,211.138.121.36:81,211.138.121.36:82,211.138.121.37:81,211.138.121.37:83,211.138.121.38:80,211.138.121.38:81,211.138.121.38:83,211.143.146.239:80,211.144.76.58:9000,211.144.81.68:18000,211.152.50.70:80,211.166.8.27:80,211.167.105.72:80,211.167.105.72:82,211.167.105.77:80,211.167.105.77:81,211.167.105.77:82,211.167.105.77:83,211.167.105.78:80");
		exec("211.167.105.99:83,211.167.105.100:80,218.4.236.117:80,218.5.74.174:80,218.7.132.1:8080,218.24.166.78:3128,218.59.144.95:80,218.59.144.120:80,218.65.132.38:80,218.75.155.242:8888,218.90.174.167:3128,218.108.168.69:80,218.108.168.69:82,218.108.168.70:80,218.108.168.70:82,218.201.21.142:80,218.201.21.144:80,218.201.21.147:80,218.201.21.153:80,218.201.38.49:80,218.206.83.89:80,218.207.208.55:8080,218.240.131.12:80,218.240.156.82:80,218.244.148.34:3128,219.159.198.81:9999,220.178.101.170:80,220.181.45.4:8888,221.5.69.51:80,221.176.14.72:80");
		exec("221.180.130.49:80,221.180.130.50:80,221.183.16.219:80,222.74.28.14:23,222.85.149.4:3128,222.87.129.30:80,222.246.232.55:80,223.68.6.10:8000,223.99.188.74:8090,223.99.189.102:8090,1.85.17.82:1080,58.59.68.91:1080,59.37.163.176:1080,61.147.67.2:9123,61.147.67.2:9124,61.147.67.2:9125,61.177.248.202:1080,120.198.150.4:1080,124.42.127.221:1080,124.160.35.2:808,183.60.143.121:1080,183.136.152.68:1080,218.241.238.141:1080,219.157.77.102:1080,221.1.215.138:1080,221.6.29.142:1080,222.188.10.1:1080");
		//exec("27.214.100.127", "8585");
		//exec("117.122.167.200", "9001");
		//exec("61.50.245.163", "8000");
		/*exec("183.60.98.65", "80");
		exec("180.110.214.249", "8585");*/
		
		
		try {
			Thread.sleep(120000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		for(Future<Boolean> future : futureList) {
			if (future.isDone()) {
				continue;
			}
			try {
				//Boolean isAcceptingRequests = 
				future.get(10, TimeUnit.SECONDS);
				//this waits for 10 seconds, throwing TimeoutException if not done
			} catch (Exception e) {
				future.cancel(true);
			} 
		}
		
		
		
		System.out.println("size:" + queue.size() + " elapse time:" + (System.currentTimeMillis() - st));
		System.out.println(httpSet.size() + "=" + httpSet);
		System.out.println(httpsSet.size() + "https=" + httpsSet);
		System.out.println(https2Set.size() + "http_https=" + https2Set);
		//fail
		/*
		exec("111.40.194.38", "84");
		exec("61.50.245.163", "8000");
		exec("60.220.204.2", "63000");
		System.out.println("------------60.20.227.217:8585-------------");
		System.out.println("Proxy Authenticate = " + ProxyAuthentication.authenticate("60.20.227.217", "8585"));
		System.out.println("------------139.217.4.210-------------");
		System.out.println("Proxy Authenticate = " + ProxyAuthentication.authenticate("139.217.4.210", "31288"));
		System.out.println("------------139.217.5.155-------------");
		System.out.println("Proxy Authenticate = " + ProxyAuthentication.authenticate("139.217.5.155", "31288"));
		*/

	}
	private static void exec(String str) {
		String[] ips = str.split("[,]");
		for(String ip1 : ips) {
			while(threadNum.get() > 500) {
				try {
					Thread.sleep(600);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
			final String[] ip2 = ip1.split(":");
			String x = ip2.toString();
			if (!queue.contains(x)) {
				queue.add(x);
				Future<Boolean> future = ThreadPoolManager.getThreadPool().submit(new Callable<Boolean>() {
					@Override
					public Boolean call() throws Exception {
						threadNum.incrementAndGet();
						try {
							execAll(ip2[0].trim(), ip2[1].trim());
							//exec(ip2[0].trim(), ip2[1].trim());
						} catch (Exception e) {
							e.printStackTrace();
						}
						threadNum.decrementAndGet();
						return true;
					}
				});
				futureList.add(future);
			}
		}
	}
	private static void exec(String ip, String port) {
		ProxyAuthentication pa = new ProxyAuthentication();
		String x = ip + ":" + port;
		//System.out.println("------------" + x + "-------------");
		boolean h1 = pa.authenticateHttps(ip, port);
		if (h1) {
			httpsSet.add(x);
		}
		System.out.println(x + ">>>>>Proxy Authenticate Https= " + h1 + " >>>>>Resp Time=" + pa.getResponseTime());
		boolean h2 = pa.authenticateHttp(ip, port);
		if (h2) {
			httpSet.add(x);
		}
		System.out.println(x + ">>>>>Proxy Authenticate Http = " + h2 + " >>>>>Resp Time=" + pa.getResponseTime());
		if (h1 && h2) {
			https2Set.add(x);
		}
	}
	private static void execAll(String ip, String port) {
		ProxyAuthentication pa = new ProxyAuthentication();
		String x = ip + ":" + port;
		//System.out.println("------------" + x + "-------------");
		boolean h1 = pa.authenticateAll(ip, port);
		if (h1) {
			https2Set.add(x);
			if (pa.getResponseTime() < 2000) {
				System.out.println(x + ">>>>>Proxy Authenticate all= " + h1 + " >>>>>Resp Time=" + pa.getResponseTime());
			}
		}
	}
	/**
	 * 平均响应时间(ms)
	 * @return
	 */
	public long getResponseTime() {
		return responseTime;
	}
	public boolean isAuthenticate() {
		return authenticate;
	}

}
